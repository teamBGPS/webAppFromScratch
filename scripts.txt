

1. https://maven.apache.org/archetypes/maven-archetype-webapp/
   
    A. Interactive mode:
       mvn archetype:generate -DarchetypeGroupId=org.apache.maven.archetypes -DarchetypeArtifactId=maven-archetype-webapp -DarchetypeVersion=1.4

       - groupId: org.teamBgps.demo.basicwebapp   (groupId will identify your project uniquely across all projects)
       - artifactId: web-app
       - version: 1.0
       - package: org.teamBgps.demo.basicwebapp

    B. Batch mode:
       mvn archetype:generate -B -DgroupId="org.teamBgps.demo.basicwebapp" -DartifactId="web-app" -Dversion="1.0" -DarchetypeGroupId=org.apache.maven.archetypes -DarchetypeArtifactId=maven-archetype-webapp -DarchetypeVersion=1.4


2. Open pom file in IntelIJ


3. Configure jetty as server in IntelIJ

   A. add to pom file:

   <build>
    ...
    <plugins>
      <plugin>
        <groupId>org.eclipse.jetty</groupId>
        <artifactId>jetty-maven-plugin</artifactId>
        <version>9.4.28.v20200408</version>
      </plugin>
    </plugins>
    ...
   </build>

   B. Steps
      - Run/Edit configuration...

      - Add new configuration: Maven
        - Name: e.g. JettyServer
        - Command line: jetty:run

      - Run/Run

      - In browser: localhost:8080


4. Add servlet code
    A. New directory: src/main/java

    B. Mark directory as "sources root"

    C. New directory in java: org.teamBgps.demo.basicwebapp

    D. New class file HelloHello.java
       package org.teamBgps.demo.basicwebapp;
       import java.io.IOException;
       import java.io.PrintWriter;
       import javax.servlet.annotation.WebServlet;
       import javax.servlet.http.HttpServlet;
       import javax.servlet.http.HttpServletRequest;
       import javax.servlet.http.HttpServletResponse;
       @WebServlet(name = "HelloHelloName")
       @SuppressWarnings("serial")
       public class HelloHello extends HttpServlet {
        @Override
        public void doGet(HttpServletRequest req, HttpServletResponse resp) throws IOException {
         PrintWriter out = resp.getWriter();
         out.println("Servlet: hello hello!");
        }
       }

    E. Add to pom file:
       <dependencies>
       ...
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>3.1.0</version>
            <type>jar</type>
            <scope>provided</scope>
        </dependency>
       </dependencies>

    F. Enable auto import during rebuild (right bottom during corner)

    G. Add to web.xml
      <web-app>
       <servlet>
        <servlet-name>HelloHelloName</servlet-name>
        <servlet-class>org.teamBgps.demo.basicwebapp.HelloHello</servlet-class>
       </servlet>
       <servlet-mapping>
        <servlet-name>HelloHelloName</servlet-name>
        <url-pattern>/hello</url-pattern>
       </servlet-mapping>
      </web-app>

    H. Run/Run

    I. In browser: localhost:8080 and localhost:8080/hello


+1: clone repo, open pom file in IntelIJ, step 3.B, Run and check localhost:8080 and localhost:8080/hello